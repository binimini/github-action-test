# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Setup Node.js
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14.x
         
      - name: Install Client node_modules
        run: |
         cd client/
         npm install
         
      - name: Setting .env
        run: |
         echo $PWD
         cd client/
         touch .env
         echo REACT_APP_SERVER_URL=${{ secrets.REACT_APP_SERVER_URL }} > .env
         cat .env
       
      - name : Build React
        run: |
         cd client/
         npm run-script build
        
      - name: Install Server node_modules
        run: |
          cd server/
          npm install
      - name : Setting server config
        run: |
         cd server/
         mkdir config
         cd config/
         touch config.json
         touch client.config.json
         touch session.config.json
         touch github.config.json
         echo {\"url\":\"/\"} > client.config.json
         echo {\"secret\": \"${{ secrets.SESSION_SECRET }}\"} > session.config.json 
         echo {\"clientId\": \"${{ secrets.OAUTH_GITHUB_ID }}\", |
         \"clienSecret\": \"${{ secrets.OAUTH_GITHUB_SECRET }}\", |
         \"redirectURL\": \"${{ secrets.OAUTH_GITHUB_REDIRECT }}\"} > github.config.json
         echo |
               {
          \"development\": {
            \"username\": \"bmtown\",
            \"password\": \"${{ secrets.DB_PASSWORD }}\",
            \"database\": \"bmtown\",
            \"host\": \"127.0.0.1\",
            \"dialect\": \"mysql\"
          },
          \"test\": {
          \"username\": \"bmtown\",
            \"password\": \"${{ secrets.DB_PASSWORD }}\",
            \"database\": \"bmtown\",
            \"host\": \"127.0.0.1\",
            \"dialect\": \"mysql\"
          },
          \"production\": {
               \"username\": \"bmtown\",
            \"password\": \"${{ secrets.DB_PASSWORD }}\",
            \"database\": \"bmtown\",
            \"host\": \"127.0.0.1\",
            \"dialect\": \"mysql\"
          }
         } > config.json      
         cat config.json
         cat client.config.json
         cat session.config.json
         cat github.config.json
         
      - name: SCP action
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "./"
          target: "test/"
      - name: SSH connect
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
           pwd
           ifconfig
           touch test-ssh
           
